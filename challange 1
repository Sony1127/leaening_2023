#include <stdint.h>
#include <stdbool.h>

#define MAX_PACKET_DATA_LENGTH (50)

typedef struct data_packet_t {
    uint8_t id;
    uint8_t data_length;
    uint8_t data[MAX_PACKET_DATA_LENGTH];
    uint16_t crc;
} data_packet_t;

// Calculates the CRC value for a data packet
uint16_t calculateCRC(const data_packet_t* packet) {
    // Pseudo code for CRC calculation
    uint16_t crc = 0;
    // Iterate through the packet's data
    for (int i = 0; i < packet->data_length; i++) {
        crc = crc ^ packet->data[i]; // XOR the data with the current CRC value
        // Pseudo code for bit shifting and XOR
        for (int j = 0; j < 8; j++) {
            if (crc & 0x0001) {
                crc = (crc >> 1) ^ 0xA001;
            } else {
                crc = crc >> 1;
            }
        }
    }
    return crc;
}

// Checks if a data packet is corrupted
bool isPacketCorrupted(const data_packet_t* packet) {
    uint16_t calculatedCRC = calculateCRC(packet);
    return (calculatedCRC != packet->crc);
}